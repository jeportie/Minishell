!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BAR_WIDTH	make_interface/src/progress.c	17;"	d	file:
BLUE	Makefile	/^BLUE    = \\033[34m$/;"	m
BLUE	make_interface/config/Makefile	/^BLUE    = \\033[34m$/;"	m
BOLD	Makefile	/^BOLD    = \\033[1m$/;"	m
BOLD	make_interface/config/Makefile	/^BOLD    = \\033[1m$/;"	m
CC	Makefile	/^CC = 		cc$/;"	m
CC	Makefile	/^default: CC = cc$/;"	m
CC	Makefile	/^san: CC = clang$/;"	m
CC	Makefile	/^val: CC = cc$/;"	m
CC	lib/libgc/Makefile	/^CC = gcc$/;"	m
CC	make_interface/config/Makefile	/^CC = 		{{CC}}$/;"	m
CC	make_interface/config/Makefile	/^default: CC = cc$/;"	m
CC	make_interface/config/Makefile	/^san: CC = clang$/;"	m
CC	make_interface/config/Makefile	/^val: CC = cc$/;"	m
CFLAGS	Makefile	/^CFLAGS = 	-Wall -Wextra -Werror$/;"	m
CFLAGS	lib/libgc/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m
CFLAGS	make_interface/config/Makefile	/^CFLAGS = 	{{CFLAGS}}$/;"	m
DEPFLAGS	Makefile	/^DEPFLAGS =  -MMD -MP$/;"	m
DEPFLAGS	make_interface/config/Makefile	/^DEPFLAGS =  -MMD -MP$/;"	m
DEPS	Makefile	/^DEPS = 		$(OBJ:.o=.d)$/;"	m
DEPS	make_interface/config/Makefile	/^DEPS = 		$(OBJ:.o=.d)$/;"	m
DirectoryOfThisScript	ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f
FlagsForFile	ycm_extra_conf.py	/^def FlagsForFile(filename):$/;"	f
GREEN	Makefile	/^GREEN   = \\033[32m$/;"	m
GREEN	make_interface/config/Makefile	/^GREEN   = \\033[32m$/;"	m
GREEN	make_interface/src/make_prompt.c	21;"	d	file:
HELG	Makefile	/^HELG =      valgrind --tool=helgrind --history-level=full \\$/;"	m
HELG	make_interface/config/Makefile	/^HELG =      valgrind --tool=helgrind --history-level=full \\$/;"	m
INCLUDES	Makefile	/^INCLUDES = -I.\/include -I.\/lib\/libgc\/include #-I.\/lib\/libgc\/include$/;"	m
INCLUDES	make_interface/config/Makefile	/^INCLUDES =  {{INCLUDES}} $/;"	m
LDFLAGS	Makefile	/^LDFLAGS = -lreadline -L.\/lib\/libgc -lgc #-L.\/lib\/libgc -lgc$/;"	m
LIBGC_H	lib/libgc/include/libgc.h	14;"	d
LIBS	make_interface/config/Makefile	/^LIBS =		{{LIBS}} $/;"	m
LIB_DIR	make_interface/config/Makefile	/^LIB_DIR =	{{DIRLIBS}}$/;"	m
MAX_FILES	make_interface/src/interactive_select.c	19;"	d	file:
MAX_SLEEP_USEC	make_interface/src/progress.c	18;"	d	file:
MINISHELL_H	include/minishell.h	14;"	d
MIN_SLEEP_USEC	make_interface/src/progress.c	19;"	d	file:
MakeRelativePathsAbsolute	ycm_extra_conf.py	/^def MakeRelativePathsAbsolute(flags, working_directory):$/;"	f
NAME	Makefile	/^NAME = Minishell$/;"	m
NAME	lib/libgc/Makefile	/^NAME = libgc.a$/;"	m
NAME	make_interface/config/Makefile	/^NAME = {{NAME}}$/;"	m
NC	make_interface/src/make_prompt.c	23;"	d	file:
OBJ	Makefile	/^OBJ = 		$(SRC:$(SRC_DIR)\/%.c=$(OBJ_DIR)\/%.o)$/;"	m
OBJ	lib/libgc/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	make_interface/config/Makefile	/^OBJ = 		$(SRC:$(SRC_DIR)\/%.c=$(OBJ_DIR)\/%.o)$/;"	m
OBJ_DIR	Makefile	/^OBJ_DIR = 	obj$/;"	m
OBJ_DIR	make_interface/config/Makefile	/^OBJ_DIR = 	obj$/;"	m
RED	Makefile	/^RED     = \\033[31m$/;"	m
RED	make_interface/config/Makefile	/^RED     = \\033[31m$/;"	m
RED	make_interface/src/make_prompt.c	22;"	d	file:
RESET	Makefile	/^RESET   = \\033[0m$/;"	m
RESET	make_interface/config/Makefile	/^RESET   = \\033[0m$/;"	m
SANITIZE	Makefile	/^SANITIZE = 	-g3 -fPIC -fsanitize=thread$/;"	m
SANITIZE	make_interface/config/Makefile	/^SANITIZE = 	-g3 -fPIC -fsanitize=thread$/;"	m
SCRIPT_URL	Makefile	/^SCRIPT_URL = https:\/\/github.com\/jeromeDev94\/make_interface.git$/;"	m
SCRIPT_URL	make_interface/config/Makefile	/^SCRIPT_URL = https:\/\/github.com\/jeromeDev94\/make_interface.git$/;"	m
SRC	Makefile	/^SRC = \\$/;"	m
SRC	lib/libgc/Makefile	/^SRC = src\/gc_cleanup.c \\$/;"	m
SRC	make_interface/config/Makefile	/^SRC =$/;"	m
SRC_DIR	Makefile	/^SRC_DIR = 	src$/;"	m
SRC_DIR	make_interface/config/Makefile	/^SRC_DIR = 	src$/;"	m
START_TEST	test_src/init_shell/test_ms_get_user_input.c	/^START_TEST(test_ms_get_user_input_empty)$/;"	f
START_TEST	test_src/init_shell/test_ms_get_user_input.c	/^START_TEST(test_ms_get_user_input_normal)$/;"	f
START_TEST	test_src/init_shell/test_ms_get_user_input.c	/^START_TEST(test_ms_get_user_input_special_chars)$/;"	f
START_TEST	test_src/init_shell/test_ms_init_shell.c	/^START_TEST(test_ms_init_shell_initialization)$/;"	f
TOTAL_STEPS	Makefile	/^TOTAL_STEPS := $(words $(OBJ))$/;"	m
TOTAL_STEPS	make_interface/config/Makefile	/^TOTAL_STEPS := $(words $(OBJ))$/;"	m
VALG	Makefile	/^VALG =		valgrind --leak-check=full --show-leak-kinds=all \\$/;"	m
VALG	make_interface/config/Makefile	/^VALG =		valgrind --leak-check=full --show-leak-kinds=all \\$/;"	m
VERBOSE	Makefile	/^VERBOSE ?= @$/;"	m
VERBOSE	Makefile	/^classic: VERBOSE =$/;"	m
VERBOSE	make_interface/config/Makefile	/^VERBOSE ?= @$/;"	m
VERBOSE	make_interface/config/Makefile	/^classic: VERBOSE =$/;"	m
VFLAGS	Makefile	/^VFLAGS = 	-g3 -fPIC $/;"	m
VFLAGS	make_interface/config/Makefile	/^VFLAGS = 	-g3 -fPIC $/;"	m
YELLOW	Makefile	/^YELLOW  = \\033[33m$/;"	m
YELLOW	make_interface/config/Makefile	/^YELLOW  = \\033[33m$/;"	m
calendar_cache_directory	Makefile	/^	vim -c "let g:calendar_cache_directory=expand('.\/.calendar\/')" \\$/;"	m
calendar_cache_directory	make_interface/config/Makefile	/^	vim -c "let g:calendar_cache_directory=expand('.\/.calendar\/')" \\$/;"	m
compilation_database_folder	ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v
create_ycm_extra_conf	make_interface/config/build.sh	/^create_ycm_extra_conf() {$/;"	f
display_menu	make_interface/src/interactive_select.c	/^void	display_menu(WINDOW *menu_win, char *choices[], int n_choices, int hl)$/;"	f
error_code	include/minishell.h	/^	int		error_code;$/;"	m	struct:s_shell
fd	lib/libgc/include/libgc.h	/^	int					fd;$/;"	m	struct:s_gc_node
flags	ycm_extra_conf.py	/^flags = [$/;"	v
ft_count_words	make_interface/src/make_prompt.c	/^static size_t	ft_count_words(char *str, char c)$/;"	f	file:
ft_extract	make_interface/src/make_prompt.c	/^static char	*ft_extract(const char **s, char c, char **tab, size_t i)$/;"	f	file:
ft_free_memory	make_interface/src/make_prompt.c	/^static void	ft_free_memory(char **tab, size_t i)$/;"	f	file:
ft_memcpy	lib/libgc/src/gc_register.c	/^static void	*ft_memcpy(void *dest, const void *src, size_t n)$/;"	f	file:
ft_split	make_interface/src/make_prompt.c	/^char	**ft_split(char const *s, char c)$/;"	f
ft_strdup	lib/libgc/src/gc_register.c	/^static char	*ft_strdup(const char *s)$/;"	f	file:
ft_strlcpy	make_interface/src/make_prompt.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t size)$/;"	f
ft_strlen	lib/libgc/src/gc_register.c	/^static int	ft_strlen(const char *str)$/;"	f	file:
ft_substr_len	make_interface/src/make_prompt.c	/^static size_t	ft_substr_len(char *str, char c)$/;"	f	file:
g_garbage_collector	lib/libgc/src/gc_globals.c	/^t_gc	g_garbage_collector = {NULL};$/;"	v
gc_cleanup	lib/libgc/src/gc_cleanup.c	/^void	gc_cleanup(void)$/;"	f
gc_collect	lib/libgc/src/gc_collect.c	/^void	gc_collect(void)$/;"	f
gc_delete_node	lib/libgc/src/gc_collect.c	/^static void	gc_delete_node(t_gc_node **prev, t_gc_node **current)$/;"	f	file:
gc_fd_register	lib/libgc/src/gc_fd_register.c	/^void	gc_fd_register(int fd)$/;"	f
gc_lock	lib/libgc/src/gc_mark_lock.c	/^void	gc_lock(void *ptr)$/;"	f
gc_malloc	lib/libgc/src/gc_malloc.c	/^void	*gc_malloc(size_t size)$/;"	f
gc_mark	lib/libgc/src/gc_mark_lock.c	/^void	gc_mark(void *ptr)$/;"	f
gc_nest_lock	lib/libgc/src/gc_mark_lock.c	/^void	gc_nest_lock(void *ptr)$/;"	f
gc_nest_register	lib/libgc/src/gc_nest_register.c	/^void	gc_nest_register(void *ptr)$/;"	f
gc_register	lib/libgc/src/gc_register.c	/^void	gc_register(void *ptr)$/;"	f
gc_temp_file_register	lib/libgc/src/gc_register.c	/^void	gc_temp_file_register(const char *filename)$/;"	f
gc_unlock	lib/libgc/src/gc_mark_lock.c	/^void	gc_unlock(void *ptr)$/;"	f
generate_src_list	make_interface/exec/update_makefile.sh	/^generate_src_list() {$/;"	f
get_uml_files	make_interface/src/interactive_select.c	/^void	get_uml_files(char *directory, char *file_list[], int *count)$/;"	f
head	lib/libgc/include/libgc.h	/^	t_gc_node	*head;$/;"	m	struct:s_garbage_collector
is_array	lib/libgc/include/libgc.h	/^	bool				is_array;$/;"	m	struct:s_gc_node
is_locked	lib/libgc/include/libgc.h	/^	bool				is_locked;$/;"	m	struct:s_gc_node
is_marked	lib/libgc/include/libgc.h	/^	bool				is_marked;$/;"	m	struct:s_gc_node
main	main.c	/^int	main(int argc, char **argv, char **envp)$/;"	f
main	make_interface/src/interactive_select.c	/^int	main(void)$/;"	f
main	make_interface/src/make_prompt.c	/^int	main(void)$/;"	f
main	make_interface/src/progress.c	/^int	main(int argc, char **argv)$/;"	f
main	test_src/init_shell/test_ms_get_user_input.c	/^int	main(void)$/;"	f
main	test_src/init_shell/test_ms_init_shell.c	/^int main(void) {$/;"	f
minishell_suite	test_src/init_shell/test_ms_get_user_input.c	/^Suite	*minishell_suite(void)$/;"	f
minishell_suite	test_src/init_shell/test_ms_init_shell.c	/^Suite *minishell_suite(void) {$/;"	f
mock_add_history	test_src/init_shell/test_ms_get_user_input.c	/^void	mock_add_history(const char *line)$/;"	f
mock_readline	test_src/init_shell/test_ms_get_user_input.c	/^char	*mock_readline(const char *prompt)$/;"	f
ms_get_user_input	src/init_shell/ms_get_user_input.c	/^void	ms_get_user_input(t_shell *shell)$/;"	f
ms_init_shell	src/init_shell/ms_init_shell.c	/^t_shell	ms_init_shell(int argc, char **envp)$/;"	f
next	lib/libgc/include/libgc.h	/^	struct s_gc_node	*next;$/;"	m	struct:s_gc_node	typeref:struct:s_gc_node::s_gc_node
print_progress	make_interface/src/progress.c	/^void	print_progress(int step, int total)$/;"	f
progressive_sleep	make_interface/src/progress.c	/^void	progressive_sleep(int step, int total)$/;"	f
ptr	lib/libgc/include/libgc.h	/^	void				*ptr;$/;"	m	struct:s_gc_node
remove_newline	make_interface/src/make_prompt.c	/^void	remove_newline(char *str)$/;"	f
run_make_command	make_interface/src/make_prompt.c	/^void run_make_command(char *target, char *args)$/;"	f
s_garbage_collector	lib/libgc/include/libgc.h	/^typedef struct s_garbage_collector$/;"	s
s_gc_node	lib/libgc/include/libgc.h	/^typedef struct s_gc_node$/;"	s
s_shell	include/minishell.h	/^typedef struct s_shell$/;"	s
t_gc	lib/libgc/include/libgc.h	/^}				t_gc;$/;"	t	typeref:struct:s_garbage_collector
t_gc_node	lib/libgc/include/libgc.h	/^}				t_gc_node;$/;"	t	typeref:struct:s_gc_node
t_shell	include/minishell.h	/^}			t_shell;$/;"	t	typeref:struct:s_shell
temp_file	lib/libgc/include/libgc.h	/^	char				*temp_file;$/;"	m	struct:s_gc_node
update_makefile	make_interface/config/build.sh	/^update_makefile() {$/;"	f
user_input	include/minishell.h	/^	char	*user_input;$/;"	m	struct:s_shell
